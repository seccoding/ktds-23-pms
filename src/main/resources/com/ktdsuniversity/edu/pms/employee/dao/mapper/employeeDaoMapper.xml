<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ktdsuniversity.edu.pms.employee.dao.EmployeeDao">

	<resultMap type="com.ktdsuniversity.edu.pms.employee.vo.EmployeeVO"
			   id="employeeVOMap"
			   autoMapping="true">
		<id column="EMP_ID" property="empId"/>
		<association property="departmentVO"
					 javaType="com.ktdsuniversity.edu.pms.department.vo.DepartmentVO">
			<id column="DEPT_ID" property="deptId"/>
			<result column="DEPT_NAME" property="deptName"/>
		</association>
		<association property="jobVO"
					 javaType="com.ktdsuniversity.edu.pms.job.vo.JobVO">
			<id column="JOB_ID" property="jobId"/>
			<result column="JOB_NAME" property="jobName"/>
		</association>
		<association property="teamVO"
					 javaType="com.ktdsuniversity.edu.pms.team.vo.TeamVO">
			<id column="TM_ID" property="tmId"/>
			<result column="TM_NAME" property="tmName"/>
		</association>
		</resultMap>

	<select id="getAllEmployeeCount" 
			resultType="_int">
		SELECT COUNT(1)
		  FROM EMPLOYEE E
	</select>

	<select id="searchEmployeeAllCount" 
			parameterType="com.ktdsuniversity.edu.pms.employee.vo.SearchEmployeeVO"
			resultType="_int">
		SELECT COUNT(1)
		  FROM EMPLOYEE E
		  JOIN DEPARTMENT D
			ON D.DEPT_ID = E.DEPT_ID
		  JOIN JOB J 
		    ON J.JOB_ID = E.JOB_ID
		  <if test='searchKeyWord != null and searchKeyWord != "" '>
		  	<choose>
		  		<when test='searchType == "employee_name"'>
		  		AND E.EMP_NAME LIKE '%' || #{searchKeyWord} || '%'
		  		</when>
		  		<when test='searchType == "department_name"'>
		  		AND D.DEPT_NAME LIKE '%' || #{searchKeyWord} || '%'
		  		</when>
		  		<when test='searchType == "job_name"'>
		  		AND J.JOB_NAME LIKE '%' || #{searchKeyWord} || '%'
		  		</when>
		  	</choose>
		  </if>
	</select> 

	<select id="getAllEmployee" 
			resultMap="employeeVOMap">
	SELECT E.EMP_ID
		 , E.EMP_NAME
		 , E.WORK_STS
		 , E.SAL_YEAR
		 , E.PRFL
		 , TO_CHAR(E.HIRE_DT, 'YYYY-MM-DD')HIRE_DT 
		 , E.HIRE_YEAR
		 , TO_CHAR(E.END_DT, 'YYYY-MM-DD')END_DT
		 , TO_CHAR(E.REST_ST_DT,'YYYY-MM-DD' ) END_DT
		 , TO_CHAR(E.REST_END_DT,'YYYY-MM-DD' ) END_DT 
		 , E.CNTCT
		 , E.ADDR
		 , TO_CHAR(E.BRTH,'YYYY-MM-DD' )BRTH  
		 , E.EMAIL
		 , E.MNGR_YN
		 , E.ADMN_CODE
		 , E.DEPT_ID
		 , E.JOB_ID
		 , E.PSTN_ID
		 , E.PWD
		 , E.LGN_TRY
		 , E.SALT
		 , TO_CHAR(E.PWD_CN_DT,'YYYY-MM-DD' ) PWD_CN_DT
		 , TO_CHAR(E.LGN_TRY_DT,'YYYY-MM-DD HH:MM:SS' ) LGN_TRY_DT
		 , E.LGN_YN
		 , D.DEPT_NAME 
	  FROM EMPLOYEE E 
	  JOIN DEPARTMENT D 
	    ON D.DEPT_ID = E.DEPT_ID 
	  
	</select>
	<select id="searchAllEmployee" 
			parameterType="com.ktdsuniversity.edu.pms.employee.vo.SearchEmployeeVO"
			resultMap="employeeVOMap">
	<include refid="Common.pagenate_header" />
	SELECT E.EMP_ID
		 , E.EMP_NAME
		 , E.WORK_STS
		 , E.SAL_YEAR
		 , E.PRFL
		 , TO_CHAR(E.HIRE_DT, 'YYYY-MM-DD')HIRE_DT 
		 , E.HIRE_YEAR
		 , TO_CHAR(E.END_DT, 'YYYY-MM-DD')END_DT
		 , TO_CHAR(E.REST_ST_DT,'YYYY-MM-DD' ) REST_ST_DT
		 , TO_CHAR(E.REST_END_DT,'YYYY-MM-DD' ) REST_END_DT 
		 , E.CNTCT
		 , E.ADDR
		 , TO_CHAR(E.BRTH,'YYYY-MM-DD' )BRTH  
		 , E.EMAIL
		 , E.MNGR_YN
		 , E.ADMN_CODE
		 , E.DEPT_ID
		 , E.JOB_ID
		 , E.PSTN_ID
		 , E.PWD
		 , E.LGN_TRY
		 , E.SALT
		 , TO_CHAR(E.PWD_CN_DT,'YYYY-MM-DD' ) PWD_CN_DT
		 , TO_CHAR(E.LGN_TRY_DT,'YYYY-MM-DD HH:MM:SS' ) LGN_TRY_DT
		 , E.LGN_YN
		 , D.DEPT_NAME 
		 , J.JOB_NAME
	  FROM EMPLOYEE E 
	  JOIN DEPARTMENT D 
	    ON D.DEPT_ID = E.DEPT_ID
	  JOIN JOB J
	    ON J.JOB_ID = E.JOB_ID 
	 <if test='searchKeyWord != null and searchKeyWord !="" '>
		  	<choose>
		  		<when test='searchType == "employee_name"'>
		  		AND E.EMP_NAME LIKE '%' || #{searchKeyWord} || '%'
		  		</when>
		  		<when test='searchType == "department_name"'>
		  		AND D.DEPT_NAME LIKE '%' || #{searchKeyWord} || '%'
		  		</when>
		  		<when test='searchType == "job_name"'>
		  		AND J.JOB_NAME LIKE '%' || #{searchKeyWord} || '%'
		  		</when>
		  	</choose>
		  </if>
	<include refid="Common.pagenate_footer" />
	</select>

	
	<select id="getOneEmployee" 
			parameterType="string" 
			resultMap="employeeVOMap">
	SELECT E.EMP_ID
		 , E.EMP_NAME
		 , E.WORK_STS
		 , E.SAL_YEAR
		 , E.PRFL
		 , TO_CHAR(E.HIRE_DT, 'YYYY-MM-DD')HIRE_DT 
		 , E.HIRE_YEAR
		 , TO_CHAR(E.END_DT, 'YYYY-MM-DD')END_DT
		 , TO_CHAR(E.REST_ST_DT,'YYYY-MM-DD' ) END_DT
		 , TO_CHAR(E.REST_END_DT,'YYYY-MM-DD' ) END_DT 
		 , E.CNTCT
		 , E.ADDR
		 , TO_CHAR(E.BRTH,'YYYY-MM-DD' )BRTH  
		 , E.EMAIL
		 , E.MNGR_YN
		 , E.ADMN_CODE
		 , E.DEPT_ID
		 , E.JOB_ID
		 , E.PSTN_ID
		 , E.PWD
		 , E.LGN_TRY
		 , E.SALT
		 , TO_CHAR(E.PWD_CN_DT,'YYYY-MM-DD' ) PWD_CN_DT
		 , TO_CHAR(E.LGN_TRY_DT,'YYYY-MM-DD HH:MM:SS' ) LGN_TRY_DT
		 , E.LGN_YN
		 , D.DEPT_NAME 
		 , J.JOB_NAME
		 , T.TM_NAME
	  FROM EMPLOYEE E 
	  JOIN DEPARTMENT D
	    ON D.DEPT_ID = E.DEPT_ID
	  JOIN JOB J
	    ON J.JOB_ID = E.JOB_ID
	  JOIN TEAM T
	    ON T.DEPT_ID = E.DEPT_ID
	 WHERE E.EMP_ID = #{_parameter}
		OR D.DEPT_ID = #{_parameter}  
	</select>

	<update id="modifyEmployee" 
			parameterType="com.ktdsuniversity.edu.pms.employee.vo.EmployeeVO">
		UPDATE EMPLOYEE
		   SET EMP_NAME = #{empName}
			 , WORK_STS = #{workSts}
			 , SAL_YEAR = #{salYear}
			 <if test='prfl != null and prfl != "" '>
			 , PRFL = #{prfl}
			 </if>
			 , HIRE_YEAR =# {hireYear}
			 , END_DT  =# {emdDt}
			 , REST_ST_DT = #{restStDt}
			 , REST_END_DT = #{restEndDt}
			 , CNTCT = #{cntct}
			 , ADDR = #{addr}
			 , BRTH = #{brth}
			 , EMAIL = #{email}
			 , MNGR_YN = #{mngrYn}
			 , ADMN_CODE = #{admnCode}
			 , DEPT_ID = #{deptId}
			 , JOB_ID = #{jobId}
			 , PSTN_ID = #{pstnId}
		 WHERE EMP_ID = #{empId}
	</update>
	<update id="deleteEmployeeById"
			parameterType ="string">
		UPDATE EMPLOYEE 
   		   SET DEL_YN = 'Y'
 		 WHERE EMP_ID = #{empId} 
	</update>

	<insert id="createEmployee"
			parameterType="com.ktdsuniversity.edu.pms.employee.vo.EmployeeVO">
		INSERT INTO EMPLOYEE
		 (EMP_ID
		, EMP_NAME
		, PRFL
		, HIRE_DT
		, CNTCT
		, ADDR
		, BRTH
		, EMAIL
		, MNGR_YN
		, DEPT_ID
		, JOB_ID
		, PSTN_ID
		, PWD
		, SALT)
		VALUES
		 (#{empId}
		, #{empName}
		, #{prfl}
		, #{hireDt}
		, #{cntct}
		, #{addr}
		, #{brth}
		, #{email}
		, #{mngrYn}
		, #{deptId}
		, #{jobId}
		, #{pstnId}
		, #{pwd}
		, #{salt})
	</insert>
	
	<select id="searchEmpDeptId"
			parameterType="string"
			resultType="com.ktdsuniversity.edu.pms.employee.vo.EmployeeVO">
		SELECT *
		  FROM EMPLOYEE E
		 WHERE DEPT_ID = #{_parameter}
		   AND WORK_STS = '201'
	</select>


	<select id="saltByEmp"
			parameterType="string"
			resultType="string">
		SELECT SALT
		  FROM EMPLOYEE
		 WHERE EMP_ID = #{empId}
	</select>

</mapper>