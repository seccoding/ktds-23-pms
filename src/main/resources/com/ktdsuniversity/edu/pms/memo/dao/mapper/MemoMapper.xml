<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ktdsuniversity.edu.pms.memo.dao.MemoDao">
  
  	<resultMap type="com.ktdsuniversity.edu.pms.memo.vo.MemoVO" id="MemoVOMap" autoMapping="true">
  		<id column="MEMO_ID" property="memoId"/>
  		<association property="employeeVO" 
  					javaType="com.ktdsuniversity.edu.pms.employee.vo.EmployeeVO">
  			<id column="EMP_ID" property="empId"/>
  			<result column="EMAIL" property="email"/>
  			<result column="EMP_NAME" property="empName"/>
  		</association>
  	</resultMap>
  
  	<select id="getSentMemoAllCount"
  			parameterType="com.ktdsuniversity.edu.pms.memo.vo.SearchMemoVO"
  			resultType="_int">
  		SELECT COUNT(1)
  		  FROM MEMO M
  		 INNER JOIN EMPLOYEE E
  		    ON E.EMP_ID = M.RCV_ID
  		 WHERE M.DEL_YN = 'N'
  		   AND M.CRTR_ID = #{empId}
  		   AND M.RCV_ID != M.CRTR_ID
  		   AND M.RCV_SAVE IS NULL
  		   AND M.CRT_DT >= TRUNC(ADD_MONTHS(SYSDATE, -3))
  		 <!-- AND M.CRTR_ID = 세션에 로그인된 사람의 EMP_ID -->
  		 <if test='searchStatus != null and searchStatus != ""'>
            <choose>
                <when test='searchStatus == "all"'>
                </when>
                <otherwise>
                    AND M.READ_YN = #{searchStatus}
                </otherwise>
            </choose>
        </if>
        <if test='searchKeyword != null and searchKeyword != ""'>
            <choose>
                <when test='searchType == "rcvId"'>
                    AND M.RCV_ID LIKE '%' || #{searchKeyword} || '%'
                </when>
                <when test='searchType == "email"'>
                    AND E.EMAIL LIKE '%' || #{searchKeyword} || '%'
                </when>
                <when test='searchType == "empName"'>
                    AND E.EMP_NAME LIKE '%' || #{searchKeyword} || '%'
                </when>
            </choose>
        </if>
  	</select>
  
  	<select id="getAllSentMemo"
  parameterType="com.ktdsuniversity.edu.pms.memo.vo.SearchMemoVO"
  resultMap="MemoVOMap">
  <include refid="Common.pagenate_header"/>
  SELECT M.MEMO_ID,
         M.RCV_ID,
         M.CRTR_ID,
         TO_CHAR(M.CRT_DT, 'YYYY-MM-DD(HH24:MM:SS)') AS CRT_DT,
         M.READ_YN,
         M.DEL_YN,
         M.SAVE_YN,
         M.MEMO_CNTNT,
         M.MEMO_TTL,
         M.RCV_SAVE,
         R.EMAIL AS RCV_EMAIL,
         R.EMP_NAME AS RCV_NAME,
         C.EMAIL AS CRTR_EMAIL,
         C.EMP_NAME AS CRTR_NAME
    FROM MEMO M
    INNER JOIN EMPLOYEE R
      ON R.EMP_ID = M.RCV_ID
    INNER JOIN EMPLOYEE C
      ON C.EMP_ID = M.CRTR_ID
    WHERE M.CRTR_ID = #{empId}
      AND M.RCV_ID != M.CRTR_ID
      AND M.DEL_YN = 'N'
      AND M.RCV_SAVE IS NULL
      AND M.CRT_DT >= TRUNC(ADD_MONTHS(SYSDATE, -3))
    
  <if test='searchStatus != null and searchStatus != ""'>
    <choose>
      <when test='searchStatus == "all"'>
      </when>
      <otherwise>
        AND M.READ_YN = #{searchStatus}
      </otherwise>
    </choose>
  </if>

  <if test='searchKeyword != null and searchKeyword != ""'>
    <choose>
      <when test='searchType == "rcvId"'>
        AND M.RCV_ID LIKE '%' || #{searchKeyword} || '%'
      </when>
      <when test='searchType == "email"'>
        AND (R.EMAIL LIKE '%' || #{searchKeyword} || '%' OR C.EMAIL LIKE '%' || #{searchKeyword} || '%')
      </when>
      <when test='searchType == "empName"'>
        AND (R.EMP_NAME LIKE '%' || #{searchKeyword} || '%' OR C.EMP_NAME LIKE '%' || #{searchKeyword} || '%')
      </when>
    </choose>
  </if>
  ORDER BY M.CRT_DT DESC
  <include refid="Common.pagenate_footer"/>
</select>
  		  <!-- WHERE M.CRTR_ID = 세션에 로그인된 사람의 EMP_ID -->
  	
  	<select id="getReceiveMemoAllCount"
  			resultType="_int">
  		SELECT COUNT(1)
  		  FROM MEMO M
  		 INNER JOIN EMPLOYEE E
  		    ON E.EMP_ID = M.CRTR_ID
  		 WHERE M.DEL_YN = 'N'
  		   AND M.RCV_SAVE IS NULL
  		   AND M.RCV_ID = #{empId}
  		   AND M.CRT_DT >= TRUNC(ADD_MONTHS(SYSDATE, -3))
  		 <!-- AND M.RCV_ID = 세션에 로그인된 사람의 EMP_ID -->
  		 <if test='searchStatus != null and searchStatus != ""'>
            <choose>
                <when test='searchStatus == "all"'>
                </when>
                <otherwise>
                    AND M.READ_YN = #{searchStatus}
                </otherwise>
            </choose>
        </if>
        <if test='searchKeyword != null and searchKeyword != ""'>
            <choose>
                <when test='searchType == "rcvId"'>
                    AND M.RCV_ID LIKE '%' || #{searchKeyword} || '%'
                </when>
                <when test='searchType == "email"'>
                    AND E.EMAIL LIKE '%' || #{searchKeyword} || '%'
                </when>
                <when test='searchType == "empName"'>
                    AND E.EMP_NAME LIKE '%' || #{searchKeyword} || '%'
                </when>
            </choose>
        </if>
  	</select>
  
  	<select id="getAllReceiveMemo"
		  parameterType="com.ktdsuniversity.edu.pms.memo.vo.SearchMemoVO"
		  resultMap="MemoVOMap">
		  <include refid="Common.pagenate_header"/>
		  SELECT M.MEMO_ID,
		         M.RCV_ID,
		         M.CRTR_ID,
		         TO_CHAR(M.CRT_DT, 'YYYY-MM-DD(HH24:MM:SS)') AS CRT_DT,
		         M.READ_YN,
		         M.DEL_YN,
		         M.SAVE_YN,
		         M.MEMO_CNTNT,
		         M.MEMO_TTL,
		         M.RCV_SAVE,
		         R.EMAIL AS RCV_EMAIL,
		         R.EMP_NAME AS RCV_NAME,
		         C.EMAIL AS CRTR_EMAIL,
		         C.EMP_NAME AS CRTR_NAME
		    FROM MEMO M
		    INNER JOIN EMPLOYEE R
		      ON R.EMP_ID = M.RCV_ID
		    INNER JOIN EMPLOYEE C
		      ON C.EMP_ID = M.CRTR_ID
		    WHERE M.RCV_ID = #{empId}
		      AND M.DEL_YN = 'N'
		      AND M.RCV_SAVE IS NULL
		      AND M.CRT_DT >= TRUNC(ADD_MONTHS(SYSDATE, -3))
		
		  <if test='searchStatus != null and searchStatus != ""'>
		    <choose>
		      <when test='searchStatus == "all"'>
		      </when>
		      <otherwise>
		        AND M.READ_YN = #{searchStatus}
		      </otherwise>
		    </choose>
		  </if>
		
		  <if test='searchKeyword != null and searchKeyword != ""'>
		    <choose>
		      <when test='searchType == "rcvId"'>
		        AND M.RCV_ID LIKE '%' || #{searchKeyword} || '%'
		      </when>
		      <when test='searchType == "email"'>
		        AND (R.EMAIL LIKE '%' || #{searchKeyword} || '%' OR C.EMAIL LIKE '%' || #{searchKeyword} || '%')
		      </when>
		      <when test='searchType == "empName"'>
		        AND (R.EMP_NAME LIKE '%' || #{searchKeyword} || '%' OR C.EMP_NAME LIKE '%' || #{searchKeyword} || '%')
		      </when>
		    </choose>
		  </if>
		
		  ORDER BY M.CRT_DT DESC
		  <include refid="Common.pagenate_footer"/>
	</select>
  
  	<select id="getStorageMemoAllCount"
  			resultType="_int">
  		SELECT COUNT(1)
  		  FROM MEMO M
  		 INNER JOIN EMPLOYEE E
  		    ON E.EMP_ID = M.CRTR_ID
  		 WHERE M.DEL_YN = 'N'
  		   AND M.RCV_SAVE = M.RCV_ID
  		   AND (M.RCV_ID = #{empId}
  		    OR M.CRTR_ID = #{empId})
  		 <!-- AND M.RCV_ID = 세션에 로그인된 사람의 EMP_ID -->
  		  <if test='searchStatus != null and searchStatus != ""'>
            <choose>
                <when test='searchStatus == "all"'>
                </when>
                <otherwise>
                    AND M.READ_YN = #{searchStatus}
                </otherwise>
            </choose>
        </if>
        <if test='searchKeyword != null and searchKeyword != ""'>
            <choose>
                <when test='searchType == "rcvId"'>
                    AND M.RCV_ID LIKE '%' || #{searchKeyword} || '%'
                </when>
                <when test='searchType == "email"'>
                    AND E.EMAIL LIKE '%' || #{searchKeyword} || '%'
                </when>
                <when test='searchType == "empName"'>
                    AND E.EMP_NAME LIKE '%' || #{searchKeyword} || '%'
                </when>
            </choose>
        </if>
  	</select>
  	
  	<select id="getAllStorageMemo"
  parameterType="com.ktdsuniversity.edu.pms.memo.vo.SearchMemoVO"
  resultMap="MemoVOMap">
  <include refid="Common.pagenate_header"/>
  SELECT M.MEMO_ID,
         M.RCV_ID,
         M.CRTR_ID,
         TO_CHAR(M.CRT_DT, 'YYYY-MM-DD(HH24:MM:SS)') AS CRT_DT,
         M.READ_YN,
         M.DEL_YN,
         M.SAVE_YN,
         M.MEMO_CNTNT,
         M.MEMO_TTL,
         M.RCV_SAVE,
         R.EMAIL AS RCV_EMAIL,
         R.EMP_NAME AS RCV_NAME,
         C.EMAIL AS CRTR_EMAIL,
         C.EMP_NAME AS CRTR_NAME
    FROM MEMO M
    INNER JOIN EMPLOYEE R
      ON R.EMP_ID = M.RCV_ID
    INNER JOIN EMPLOYEE C
      ON C.EMP_ID = M.CRTR_ID
    WHERE (M.RCV_ID = #{empId}
           OR M.CRTR_ID = #{empId})
      AND M.DEL_YN = 'N'
      AND M.RCV_SAVE = M.RCV_ID
      
  <if test='searchStatus != null and searchStatus != ""'>
    <choose>
      <when test='searchStatus == "all"'>
      </when>
      <otherwise>
        AND M.READ_YN = #{searchStatus}
      </otherwise>
    </choose>
  </if>

  <if test='searchKeyword != null and searchKeyword != ""'>
    <choose>
      <when test='searchType == "rcvId"'>
        AND M.RCV_ID LIKE '%' || #{searchKeyword} || '%'
      </when>
      <when test='searchType == "email"'>
        AND (R.EMAIL LIKE '%' || #{searchKeyword} || '%' OR C.EMAIL LIKE '%' || #{searchKeyword} || '%')
      </when>
      <when test='searchType == "empName"'>
        AND (R.EMP_NAME LIKE '%' || #{searchKeyword} || '%' OR C.EMP_NAME LIKE '%' || #{searchKeyword} || '%')
      </when>
    </choose>
  </if>

  ORDER BY M.CRT_DT DESC
  <include refid="Common.pagenate_footer"/>
</select>
  
  	<insert id="writeNewMemo" parameterType="com.ktdsuniversity.edu.pms.memo.vo.MemoVO">
  		INSERT INTO MEMO
			  (MEMO_ID
			 , RCV_ID
			 , CRTR_ID
			 , CRT_DT
			 , READ_YN
			 , DEL_YN
			 , SAVE_YN
			 , MEMO_CNTNT
			 , MEMO_TTL
			 , RCV_SAVE)
			 VALUES
			  ('MM_' || TO_CHAR(SYSDATE, 'YYYYMMDD') || '_' || LPAD(SEQ_MEMO_PK.NEXTVAL,6 ,'0')
			 , #{rcvId} /* 받는 사람 */
			 , #{empId} /* 세션에 로그인된 사람 보내는 사람 */
			 , SYSDATE
			 , 'N'
			 , 'N'
			 , 'N'
			 , #{memoCntnt} /* 세션에 적은 내용 */
			 , #{memoTtl} /* 세션에 적은 제목 */
			 , NULL)
  	</insert>  
  	
  	<select id="selectOneMemo" parameterType="string" resultType="com.ktdsuniversity.edu.pms.memo.vo.MemoVO">
  SELECT M.MEMO_ID,
         M.RCV_ID,
         M.CRTR_ID,
         TO_CHAR(M.CRT_DT, 'YYYY-MM-DD(HH24:MM:SS)') AS CRT_DT,
         M.READ_YN,
         M.DEL_YN,
         M.SAVE_YN,
         M.MEMO_CNTNT,
         M.MEMO_TTL,
         M.RCV_SAVE,
         R.EMAIL AS RCV_EMAIL,
         R.EMP_NAME AS RCV_NAME,
         C.EMAIL AS CRTR_EMAIL,
         C.EMP_NAME AS CRTR_NAME
    FROM MEMO M
    INNER JOIN EMPLOYEE R
      ON R.EMP_ID = M.RCV_ID
    INNER JOIN EMPLOYEE C
      ON C.EMP_ID = M.CRTR_ID
   WHERE M.DEL_YN = 'N'
     AND M.MEMO_ID = #{_parameter}
</select>
  	
  	<update id="changeViewStatus" parameterType="string">
  		UPDATE MEMO
		   SET READ_YN = 'Y'
		 WHERE DEL_YN = 'N'
		   AND MEMO_ID = #{_parameter}
  	</update>
  	
  	<update id="deleteOneMemo" parameterType="string">
  		UPDATE MEMO
		   SET DEL_YN = 'Y'
		 WHERE DEL_YN = 'N'
		   AND MEMO_ID = #{_parameter}
  	</update>
  	
  	<select id="selectManyMemo"
			parameterType ="list"
			resultType="com.ktdsuniversity.edu.pms.memo.vo.MemoVO">
		SELECT MEMO_ID
		  FROM MEMO
		 WHERE MEMO_ID IN 
		<foreach collection="list" item="memoId" open="(" close=")" separator=",">
			#{memoId}
		</foreach>
		   AND DEL_YN = 'N'
	</select>
 
  	<update id="deleteManyMemo"
			parameterType = "list">
		UPDATE MEMO
		   SET DEL_YN = 'Y'
		 WHERE MEMO_ID IN 
		<foreach collection="list" item="memoId" open="(" close=")" separator=",">
			#{memoId}
		</foreach> 
	</update>
  	
  	<update id="saveOneMemo" parameterType="com.ktdsuniversity.edu.pms.memo.vo.MemoVO">
  		UPDATE MEMO
		   SET RCV_SAVE = #{empId}
		 WHERE DEL_YN = 'N'
		   AND MEMO_ID = #{memoId}
  	</update>
  	
  	
  	
  	
  	
  	<select id="getReceiveMemoReadYCount"
  			resultType="_int">
  		SELECT COUNT(1)
  		  FROM MEMO M
  		 INNER JOIN EMPLOYEE E
  		    ON E.EMP_ID = M.CRTR_ID
  		 WHERE M.DEL_YN = 'N'
  		   AND M.RCV_SAVE IS NULL
  		   AND M.RCV_ID = #{empId}
  		   AND M.CRT_DT >= TRUNC(ADD_MONTHS(SYSDATE, -3))
  		   AND M.READ_YN = 'N'
  		 ORDER BY M.CRT_DT DESC
  	</select>
  
  	<select id="getReadYReceiveMemo"
		  parameterType="com.ktdsuniversity.edu.pms.memo.vo.SearchMemoVO"
		  resultMap="MemoVOMap">

		  SELECT M.MEMO_ID,
		         M.RCV_ID,
		         M.CRTR_ID,
		         TO_CHAR(M.CRT_DT, 'YYYY-MM-DD(HH24:MM:SS)') AS CRT_DT,
		         M.READ_YN,
		         M.DEL_YN,
		         M.SAVE_YN,
		         M.MEMO_CNTNT,
		         M.MEMO_TTL,
		         M.RCV_SAVE,
		         R.EMAIL AS RCV_EMAIL,
		         R.EMP_NAME AS RCV_NAME,
		         C.EMAIL AS CRTR_EMAIL,
		         C.EMP_NAME AS CRTR_NAME
		    FROM MEMO M
		    INNER JOIN EMPLOYEE R
		      ON R.EMP_ID = M.RCV_ID
		    INNER JOIN EMPLOYEE C
		      ON C.EMP_ID = M.CRTR_ID
		    WHERE M.RCV_ID = #{empId}
		      AND M.DEL_YN = 'N'
		      AND M.RCV_SAVE IS NULL
		      AND M.CRT_DT >= TRUNC(ADD_MONTHS(SYSDATE, -3))
			  AND M.READ_YN = 'N'
		  ORDER BY M.CRT_DT DESC

	</select>
</mapper>